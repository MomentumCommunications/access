/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChannelIndexRouteImport } from './routes/channel/index'
import { Route as SignUpSplatRouteImport } from './routes/sign-up.$'
import { Route as SignInSplatRouteImport } from './routes/sign-in.$'
import { Route as DmDmIdRouteImport } from './routes/dm/$dmId'
import { Route as ChannelChannelIdRouteImport } from './routes/channel/$channelId'
import { Route as ChannelGeneralIndexRouteImport } from './routes/channel/general/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChannelIndexRoute = ChannelIndexRouteImport.update({
  id: '/channel/',
  path: '/channel/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpSplatRoute = SignUpSplatRouteImport.update({
  id: '/sign-up/$',
  path: '/sign-up/$',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInSplatRoute = SignInSplatRouteImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => rootRouteImport,
} as any)
const DmDmIdRoute = DmDmIdRouteImport.update({
  id: '/dm/$dmId',
  path: '/dm/$dmId',
  getParentRoute: () => rootRouteImport,
} as any)
const ChannelChannelIdRoute = ChannelChannelIdRouteImport.update({
  id: '/channel/$channelId',
  path: '/channel/$channelId',
  getParentRoute: () => rootRouteImport,
} as any)
const ChannelGeneralIndexRoute = ChannelGeneralIndexRouteImport.update({
  id: '/channel/general/',
  path: '/channel/general/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/channel/$channelId': typeof ChannelChannelIdRoute
  '/dm/$dmId': typeof DmDmIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/channel': typeof ChannelIndexRoute
  '/channel/general': typeof ChannelGeneralIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/channel/$channelId': typeof ChannelChannelIdRoute
  '/dm/$dmId': typeof DmDmIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/channel': typeof ChannelIndexRoute
  '/channel/general': typeof ChannelGeneralIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/channel/$channelId': typeof ChannelChannelIdRoute
  '/dm/$dmId': typeof DmDmIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/channel/': typeof ChannelIndexRoute
  '/channel/general/': typeof ChannelGeneralIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/channel/$channelId'
    | '/dm/$dmId'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/channel'
    | '/channel/general'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/channel/$channelId'
    | '/dm/$dmId'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/channel'
    | '/channel/general'
  id:
    | '__root__'
    | '/'
    | '/channel/$channelId'
    | '/dm/$dmId'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/channel/'
    | '/channel/general/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChannelChannelIdRoute: typeof ChannelChannelIdRoute
  DmDmIdRoute: typeof DmDmIdRoute
  SignInSplatRoute: typeof SignInSplatRoute
  SignUpSplatRoute: typeof SignUpSplatRoute
  ChannelIndexRoute: typeof ChannelIndexRoute
  ChannelGeneralIndexRoute: typeof ChannelGeneralIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/channel/': {
      id: '/channel/'
      path: '/channel'
      fullPath: '/channel'
      preLoaderRoute: typeof ChannelIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up/$': {
      id: '/sign-up/$'
      path: '/sign-up/$'
      fullPath: '/sign-up/$'
      preLoaderRoute: typeof SignUpSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/$': {
      id: '/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof SignInSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dm/$dmId': {
      id: '/dm/$dmId'
      path: '/dm/$dmId'
      fullPath: '/dm/$dmId'
      preLoaderRoute: typeof DmDmIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/channel/$channelId': {
      id: '/channel/$channelId'
      path: '/channel/$channelId'
      fullPath: '/channel/$channelId'
      preLoaderRoute: typeof ChannelChannelIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/channel/general/': {
      id: '/channel/general/'
      path: '/channel/general'
      fullPath: '/channel/general'
      preLoaderRoute: typeof ChannelGeneralIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChannelChannelIdRoute: ChannelChannelIdRoute,
  DmDmIdRoute: DmDmIdRoute,
  SignInSplatRoute: SignInSplatRoute,
  SignUpSplatRoute: SignUpSplatRoute,
  ChannelIndexRoute: ChannelIndexRoute,
  ChannelGeneralIndexRoute: ChannelGeneralIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
